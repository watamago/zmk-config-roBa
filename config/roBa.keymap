#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp LG(TAB)>;
            key-positions = <37 0>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
    };

    to_layer_0: to_layer_0 {
        compatible = "zmk,behavior-macro-one-param";
        #binding-cells = <1>;
        bindings =
            <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
            <&macro_press>;

        // スリープ操作

        label = "TO_LAYER_0";  // ラベルの設定
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W           &kp E         &kp R                    &kp T                                                     &kp Y            &kp U  &kp I      &kp O    &kp P
&kp A             &kp S           &kp D         &lt 5 F                  &kp G            &kp G                 &kp LEFT_BRACKET   &kp H            &kp J  &kp K      &lt 5 L  &kp MINUS
&mt LEFT_SHIFT Z  &kp X           &kp C         &kp V                    &kp B            &kp B                 &kp RIGHT_BRACKET  &kp N            &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp TAB           &kp LEFT_SHIFT  &kp LEFT_ALT  &mt LEFT_GUI LANGUAGE_1  &mt LCTRL SPACE  &lt 2 LANGUAGE_2      &lt 3 ENTER        &lt 3 BACKSPACE                             &kp RG(Z)
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp ESCAPE                  &kp KP_NUMBER_7  &kp N7        &kp N8        &kp N9                                       &kp HASH         &kp AMPERSAND  &kp TILDE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp EQUAL                   &kp KP_NUMBER_4  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0          &kp RG(PLUS)   &kp EXCLAMATION  &kp PLUS       &kp MINUS  &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD      &kp RG(MINUS)  &kp DOLLAR       &kp ASTERISK   &kp SLASH  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &kp KP_N0        &kp KP_DOT    &trans        &trans        &trans          &trans         &trans                                                           &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)        &kp LS(NUMBER_3)  &kp LC(NUMBER_4)         &kp LS(N5)                       &kp LS(NUMBER_6)    &kp LS(N7)           &kp UP_ARROW    &kp LS(N9)       &kp LS(N0)
&kp HOME          &kp LEFT_ARROW          &kp DOWN_ARROW    &kp RIGHT_ARROW          &kp END     &trans      &kp F12  &kp HOME            &kp LEFT_ARROW       &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END
&kp LEFT_SHIFT    &kp LG(LS(LEFT_ARROW))  &trans            &kp LG(LS(RIGHT_ARROW))  &trans      &trans      &kp F11  &kp RG(LEFT_ARROW)  &kp RG(RIGHT_ARROW)  &trans          &trans           &trans
&trans            &trans                  &trans            &trans                   &trans      &trans      &trans   &trans                                                                    &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R  &to_layer_0 T                                      &to_layer_0 Y  &to_layer_0 U  &to_layer_0 I  &to_layer_0 O  &to_layer_0 P
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &trans         &to_layer_0 G  &trans                      &trans  &to_layer_0 H  &to_layer_0 J  &to_layer_0 K  &to_layer_0 L  &to_layer_0 MINUS
&to_layer_0 Z  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V  &to_layer_0 B  &trans                      &trans  &to_layer_0 N  &to_layer_0 M  &mkp MB1       &mkp MB2       &trans
&trans         &trans         &trans         &trans         &trans         &to_layer_0 LANGUAGE_2      &trans  &trans                                                      &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans        &trans         &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans         &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LG(LEFT)  &kp RG(RIGHT)  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                       &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
